basePath: /
definitions:
  types.DirectoryStructureResponse:
    properties:
      message:
        type: string
      path:
        type: string
      scenario_id:
        type: string
      structure:
        items:
          $ref: '#/definitions/types.FileNode'
        type: array
    type: object
  types.ErrorResponse:
    properties:
      code:
        type: string
      error:
        type: string
      message:
        type: string
    type: object
  types.FileNode:
    properties:
      children:
        items:
          type: string
        type: array
      content:
        type: string
      isOpen:
        type: boolean
      isRoot:
        type: boolean
      isSaved:
        type: boolean
      path:
        type: string
      type:
        description: '"file" or "folder"'
        type: string
    type: object
  types.ScenarioStatusResponse:
    properties:
      container_id:
        type: string
      container_status:
        type: string
      message:
        type: string
      scenario_id:
        type: string
      scenario_type:
        type: string
      status:
        type: string
      user_id:
        type: string
    type: object
  types.StartScenarioRequest:
    properties:
      scenario_type:
        type: string
        enum:
          - go
          - docker
          - k8s
          - python
          - go-k8s
          - python-k8s
        description: "Type of development environment to provision"
        example: "go"
      script:
        type: string
      user_id:
        type: string
    type: object
  types.StartScenarioResponse:
    properties:
      scenario_id:
        type: string
      status:
        type: string
    type: object
  types.TerminalURLResponse:
    properties:
      message:
        type: string
      scenario_id:
        type: string
      url:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: DevLab Support
    url: http://www.swagger.io/support
  description: DevLab - Cloud-Based Coding Environment Provisioner
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: DevLab API
  version: "1.0"
paths:
  /scenarios/{id}:
    delete:
      description: Stop and clean up a running scenario
      parameters:
      - description: Scenario ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Stop a scenario
      tags:
      - scenarios
  /scenarios/types:
    get:
      description: Get information about available scenario types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              scenario_types:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: "Scenario type identifier"
                    description:
                      type: string
                      description: "Human-readable description"
                    image:
                      type: string
                      description: "Docker image name"
                    tools:
                      type: array
                      items:
                        type: string
                      description: "Available tools in this environment"
                    example_commands:
                      type: array
                      items:
                        type: string
                      description: "Example commands that work in this environment"
                    status:
                      type: string
                      description: "Production readiness status"
                    test_coverage:
                      type: string
                      description: "Test coverage level"
              message:
                type: string
              total_count:
                type: integer
              production_ready:
                type: array
                items:
                  type: string
              beta:
                type: array
                items:
                  type: string
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get available scenario types
      tags:
      - scenarios
  /scenarios/{id}/directory:
    get:
      description: Get the file and directory structure for a scenario
      parameters:
      - description: Scenario ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.DirectoryStructureResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get directory structure
      tags:
      - scenarios
  /scenarios/{id}/status:
    get:
      description: Get the current status of a scenario
      parameters:
      - description: Scenario ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ScenarioStatusResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get scenario status
      tags:
      - scenarios
  /scenarios/{id}/terminal:
    get:
      description: Get the web terminal URL for a scenario
      parameters:
      - description: Scenario ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.TerminalURLResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get terminal URL
      tags:
      - scenarios
  /scenarios/start:
    post:
      consumes:
      - application/json
      description: Launch a new coding environment (container) for a user
      parameters:
      - description: Scenario start request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.StartScenarioRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.StartScenarioResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Start a new scenario
      tags:
      - scenarios
securityDefinitions:
  BearerAuth:
    description: Enter the token with the `Bearer ` prefix, e.g. "Bearer abcde12345".
      Do NOT include the quotes around the entire value.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
