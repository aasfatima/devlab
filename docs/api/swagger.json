{
    "swagger": "2.0",
    "info": {
        "description": "DevLab - Cloud-Based Coding Environment Provisioner",
        "title": "DevLab API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "DevLab Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
          "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/scenarios/start": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Launch a new coding environment (container) for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Start a new scenario",
                "parameters": [
                    {
                        "description": "Scenario start request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.StartScenarioRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.StartScenarioResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scenarios/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Stop and clean up a running scenario",
                "tags": [
                    "scenarios"
                ],
                "summary": "Stop a scenario",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Scenario ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scenarios/{id}/directory": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the file and directory structure for a scenario",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Get directory structure",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Scenario ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.DirectoryStructureResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scenarios/{id}/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the current status of a scenario",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Get scenario status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Scenario ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ScenarioStatusResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/scenarios/{id}/terminal": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the web terminal URL for a scenario",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scenarios"
                ],
                "summary": "Get terminal URL",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Scenario ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.TerminalURLResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.DirectoryStructureResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "scenario_id": {
                    "type": "string"
                },
                "structure": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.FileNode"
                    }
                }
            }
        },
        "types.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "types.FileNode": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "content": {
                    "type": "string"
                },
                "isOpen": {
                    "type": "boolean"
                },
                "isRoot": {
                    "type": "boolean"
                },
                "isSaved": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "description": "\"file\" or \"folder\"",
                    "type": "string"
                }
            }
        },
        "types.ScenarioStatusResponse": {
            "type": "object",
            "properties": {
                "container_id": {
                    "type": "string"
                },
                "container_status": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "scenario_id": {
                    "type": "string"
                },
                "scenario_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "types.StartScenarioRequest": {
            "type": "object",
            "properties": {
                "scenario_type": {
                    "type": "string"
                },
                "script": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "types.StartScenarioResponse": {
            "type": "object",
            "properties": {
                "scenario_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "types.TerminalURLResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "scenario_id": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Enter the token with the `Bearer ` prefix, e.g. \"Bearer abcde12345\". Do NOT include the quotes around the entire value.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}